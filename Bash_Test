Bash Command Test Cases with Actual Bash Output
1. 파일 처리 및 출력 관련 테스트
Command: echo hi
Output: hi

Command: echo hi > 7.txt
Output: (화면 출력 없음, 7.txt에 "hi" 저장)

Command: <1.txt cat
Output: (1.txt 파일 내용 출력)

Command: << ll
Output: (사용자가 "ll" 입력 후 EOF까지 대기)

Command: <1.txt cat | sort > 3.txt
Output: (화면 출력 없음, 1.txt 내용 정렬되어 3.txt에 저장)

Command: <1.txt /bin/cat | sort | uniq | wc -l > 3
Output: (화면 출력 없음, 라인 수가 3 파일에 저장됨)

Command: <1.txt /bin/cat | sort | uniq | wc > 13.txt
Output: (화면 출력 없음, 단어 수, 라인 수, 바이트 수가 13.txt에 저장됨)

Command: <1.txt /bin/cat | sort | uniq | wc > 13.txt > 5.txt
Output: (화면 출력 없음, 5.txt에 동일한 내용 저장)

Command: <1.txt /bin/cat | sort | uniq | wc -l >> 13.txt
Output: (화면 출력 없음, 라인 수가 13.txt에 추가 저장됨)

Command: cat 1.txt | sort | uniq > 8.txt
Output: (화면 출력 없음, 중복이 제거된 정렬된 내용이 8.txt에 저장)

Command: <1.txt cat | grep pat123 | sort | uniq > 4.txt
Output: (화면 출력 없음, "pat123"을 포함한 중복 없는 내용이 4.txt에 저장)

2. 디렉터리 및 파일 관련 테스트
Command: /bin/ls
Output: (현재 디렉토리 파일 목록이 출력됨)

Command: cat << ll << kk > 44.txt
Output: (화면 출력 없음, 사용자가 "ll", "kk" 입력 후 내용이 44.txt에 저장됨)

Command: echo hi | echo by
Output: by

Command: exit 20 | exit 30
Output: (프로세스가 종료됨, 종료 코드 20)

Command: << ll<<
Output: (사용자가 here-doc의 종료를 위해 입력 대기)

Command: ./minishell
Output: (minishell 실행)

Command: cat << ll << pp
Output: (사용자가 "ll"과 "pp"를 입력 후 here-doc 종료)

Command: echo "cat 1.txt | cat > 3.txt"
Output: cat 1.txt | cat > 3.txt

Command: asdffklj a;sldkjf;a lsdkjf
Output: command not found: asdffklj

Command: <1.txt >44.txt
Output: (화면 출력 없음, 1.txt 내용이 44.txt에 저장됨)

Command: cd .
Output: (화면 출력 없음, 디렉토리 변경 없음)

Command: unset PATH
Output: (화면 출력 없음, PATH 환경 변수 제거됨)

Command: unset HOME
Output: (화면 출력 없음, HOME 환경 변수 제거됨)

Command: env
Output: (현재 환경 변수 목록 출력)

Command: pwd
Output: (현재 디렉토리 경로 출력)

Command: $?
Output: (이전 명령어의 종료 코드 출력, 예: 0 또는 다른 값)

Command: <’’
Output: bash: syntax error near unexpected token '‘’

Command: <1.txt echo hi > 77.txt
Output: (화면 출력 없음, 77.txt에 "hi" 저장)

Command: <4.txt echo hi
Output: hi

3. 프로세스 파이프 및 실행 관련 테스트
Command: <<<string <out cat
Output: bash: syntax error near unexpected token '<'

Command: cat > out && grep "e"
Output: (파일 입력 대기, 이후 out 파일에 저장)

Command: ls || pwd
Output: (ls가 실패할 경우 pwd 결과 출력)

Command: <<<string << here < out cat | grep "word" | wc -l
Output: bash: syntax error near unexpected token 'here'

Command: echo string >> out | cat
Output: (화면 출력 없음, out 파일에 "string" 추가 후 파일 출력)

4. 특수 명령어 및 제어문 테스트
Command: echo -n hello
Output: hello (줄바꿈 없음)

Command: export HELLO=123
Output: (화면 출력 없음, HELLO 환경 변수 설정)

Command: export HELLO="beautiful world"
Output: (화면 출력 없음, HELLO 환경 변수 설정)

Command: cd obj
Output: (화면 출력 없음, obj 디렉토리로 이동)

Command: echo $PWD $OLDPWD
Output: /current/path /previous/path (현재 및 이전 디렉토리 경로 출력)

Command: doesntexist
Output: bash: doesntexist: command not found

Command: echo $?
Output: 127 (이전 명령어의 종료 코드)

Command: $EMPTY
Output: (화면 출력 없음)

Command: echo $?
Output: 0 (이전 명령어의 종료 코드)

Command: ps -a
Output: (실행 중인 모든 프로세스 목록 출력)

Command: echo - "" " " hello
Output: hello (빈 인자는 무시됨)

Command: unset USER
Output: (화면 출력 없음, USER 변수 제거됨)

Command: unset PATH
Output: (화면 출력 없음, PATH 변수 제거됨)

Command: /bin/ls
Output: (디렉토리 파일 목록 출력)

Command: cd .. hi
Output: bash: hi: command not found (상위 디렉토리 이동 후 "hi" 명령 실행 시 에러)

Command: cd
Output: (사용자의 홈 디렉토리로 이동)

Command: cat <<HEREDOC
Output:

Copy code
oi
HEREDOC
Command: cat <<HERE <<DOC
Output:

css
Copy code
oi
HERE
time
DOC
Command: cat <<HERE | ls
Output:

bash
Copy code
oi
(ls 명령의 출력)